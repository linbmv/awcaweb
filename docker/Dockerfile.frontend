# Dockerfile.frontend

# --- Build Stage ---
FROM node:18-alpine AS build

WORKDIR /app

# 复制 frontend 目录下的 package.json 和 package-lock.json (如果存在)
COPY ../frontend/package.json ./
# 如果使用npm，则复制package-lock.json；如果使用yarn，则复制yarn.lock
# COPY ../frontend/package-lock.json ./

# 安装依赖
RUN npm install

# 复制所有前端代码
COPY ../frontend/ ./

# 构建Vue应用
RUN npm run build

# --- Production Stage ---
FROM nginx:1.25-alpine

# 从build阶段复制构建好的静态文件到Nginx的默认www目录
COPY --from=build /app/dist /usr/share/nginx/html

# （可选）复制自定义的Nginx配置
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# 暴露80端口
EXPOSE 80

# 启动Nginx
CMD ["nginx", "-g", "daemon off;"]
